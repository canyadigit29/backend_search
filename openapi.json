{
  "openapi": "3.0.0",
  "info": {
    "title": "Scottdale Inc. Search API",
    "version": "1.0.0",
    "description": "API for performing advanced Retrieval-Augmented Generation (RAG) searches across a document corpus."
  },
  "servers": [
    {
      "url": "https://backendsearch-production.up.railway.app",
      "description": "Railway production server"
    }
  ],
  "paths": {
    "/api/search/rag-search": {
      "post": {
        "summary": "Perform a RAG Search",
        "description": "This is the consolidated RAG endpoint. It takes a user query, orchestrates the full RAG pipeline based on assistant instructions, and returns a synthesized response. It automatically handles query classification, hybrid search, reranking, and summarization.",
        "operationId": "rag_search_api_search_rag_search_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "RagSearchRequest",
                "required": [
                  "query"
                ],
                "type": "object",
                "properties": {
                  "query": {
                    "title": "Query",
                    "type": "string",
                    "description": "The user's search query."
                  },
                  "response_mode": {
                    "title": "Response Mode",
                    "type": "string",
                    "description": "Response mode: 'summary' or 'structured_results'.",
                    "default": "summary"
                  },
                  "match_threshold": {
                    "title": "Match Threshold",
                    "type": "number",
                    "description": "Similarity threshold for matching.",
                    "default": 0.6
                  },
                  "match_count": {
                    "title": "Match Count",
                    "type": "integer",
                    "description": "Number of matches to return.",
                    "default": 100
                  },
                  "file_ids": {
                    "title": "File IDs",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional list of file IDs to search within."
                  },
                  "file_name": {
                    "title": "File Name",
                    "type": "string",
                    "description": "Filter by file name."
                  },
                  "description": {
                    "title": "Description",
                    "type": "string",
                    "description": "Filter by description."
                  },
                  "document_type": {
                    "title": "Document Type",
                    "type": "string",
                    "description": "Filter by document type."
                  },
                  "meeting_year": {
                    "title": "Meeting Year",
                    "type": "integer",
                    "description": "Filter by meeting year."
                  },
                  "meeting_month": {
                    "title": "Meeting Month",
                    "type": "integer",
                    "description": "Filter by meeting month."
                  },
                  "meeting_month_name": {
                    "title": "Meeting Month Name",
                    "type": "string",
                    "description": "Filter by meeting month name."
                  },
                  "meeting_day": {
                    "title": "Meeting Day",
                    "type": "integer",
                    "description": "Filter by meeting day."
                  },
                  "ordinance_title": {
                    "title": "Ordinance Title",
                    "type": "string",
                    "description": "Filter by ordinance title."
                  }
                },
                "description": "The request model for the RAG search endpoint."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RagSearchResponse",
                  "required": [
                    "summary",
                    "sources"
                  ],
                  "type": "object",
                  "properties": {
                    "summary": {
                      "title": "Summary",
                      "type": "string",
                      "description": "The generated summary of the search results."
                    },
                    "sources": {
                      "title": "Sources",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "A list of source documents for the summary."
                    },
                    "retrieved_chunks": {
                      "title": "Retrieved Chunks",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "Full data for retrieved chunks, only included if response_mode is 'structured_results'."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {}
  }
}