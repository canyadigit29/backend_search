{
  "openapi": "3.1.0",
  "info": {
    "title": "Search Documents Assistant API",
    "version": "1.0.0",
    "description": "Search endpoint for Custom GPT."
  },
  "servers": [
    {
      "url": "https://backendsearch-production.up.railway.app",
      "description": "Railway production"
    }
  ],
  "paths": {
    "/api/assistant/search_docs": {
      "post": {
        "operationId": "searchDocumentsAssistant",
        "summary": "Search documents via assistant",
        "description": "Performs a semantic search and returns a summary plus sources. Uses fixed batching: summarizes a diversified set of 25 from the top-50 (capped per file to improve breadth) and returns the remaining top-50 as pending via resume_chunk_ids.",
        "x-oai-meta": {
          "name": "searchDocumentsAssistant",
          "isUserFacing": true
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/gdrive/sync": {
      "post": {
        "operationId": "triggerGoogleDriveSync",
        "summary": "Sync, OCR, and Ingest New Files from Google Drive",
        "description": "Triggers a background job to sync new files from Google Drive. The process includes downloading, performing OCR on documents, and embedding their content to make them available for search. This command starts the full ingestion pipeline.",
        "x-oai-meta": {
          "name": "triggerGoogleDriveSync",
          "isUserFacing": true
        },
        "responses": {
          "202": {
            "description": "Sync and ingestion process started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The Google Drive sync and ingestion process has been started in the background. New files will be available for search shortly."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/assistant/generate_document_index": {
      "get": {
        "operationId": "generateDocumentIndex",
        "summary": "Generate Document Corpus Index for Enhanced Search Planning",
        "description": "Generates a comprehensive index of the document corpus including metadata, search effectiveness data, topic taxonomy, and optimization tips. Returns a downloadable JSON file that can be uploaded to improve the Custom GPT's search strategy and user guidance capabilities.",
        "x-oai-meta": {
          "name": "generateDocumentIndex",
          "isUserFacing": true
        },
        "responses": {
          "200": {
            "description": "Document index generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "generated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "corpus_summary": {
                      "type": "object",
                      "description": "Overview of document corpus statistics"
                    },
                    "search_strategy_guide": {
                      "type": "object", 
                      "description": "Data-driven recommendations for search parameters"
                    },
                    "topic_taxonomy": {
                      "type": "object",
                      "description": "Hierarchical organization of topics and document types"
                    },
                    "document_catalog": {
                      "type": "object",
                      "description": "Structured catalog of available documents and entities"
                    },
                    "usage_instructions": {
                      "type": "object",
                      "description": "Guidelines for using the index to improve search quality"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SearchRequest": {
        "type": "object",
        "required": [
          "query"
        ],
        "properties": {
          "query": {
            "type": "string"
          },
          "relevance_threshold": {
            "type": "number",
            "description": "Minimum similarity score for a result to be considered relevant (0.0 to 1.0). Default is 0.4.",
            "default": 0.4
          },
          "max_results": {
            "type": "integer",
            "description": "The maximum number of chunks to process for the summary. Default is 100.",
            "default": 100
          },
          "search_weights": {
            "type": "object",
            "description": "Weights to blend semantic and keyword search scores. Both must be provided and sum to 1.0. If omitted, backend defaults to a 50/50 blend.",
            "properties": {
              "semantic": {
                "type": "number",
                "description": "Weight for semantic search (e.g., 0.8 for broad queries)."
              },
              "keyword": {
                "type": "number",
                "description": "Weight for keyword search (e.g., 0.8 for exact-match queries)."
              }
            }
          },
          "or_terms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional alternate phrasings or synonyms. Results from each term are merged by chunk id using the best (max) score before ranking."
          },
          "resume_chunk_ids": {
            "type": "array",
            "description": "Resume mode: specify chunk IDs returned as pending_chunk_ids from a previous response to continue summarization.",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "Source": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          },
          "page_number": {
            "type": "integer"
          },
          "score": {
            "type": "number"
          },
          "excerpt": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "A temporary, signed URL to download the source file."
          }
        }
      },
      "SearchResponse": {
        "type": "object",
        "properties": {
          "summary": {
            "type": [
              "string",
              "null"
            ]
          },
          "summary_was_partial": {
            "type": "boolean",
            "description": "True if the model returned a partial response (rare). Timing is not used for batching."
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Source"
            }
          },
          "can_resume": {
            "type": "boolean",
            "description": "True when there are remaining top-50 chunks not yet summarized (fixed 25/25 batching)."
          },
          "pending_chunk_ids": {
            "type": "array",
            "description": "The remaining chunk IDs from the top-50 that were not included in this summary pass (typically the other 25). Send these back via resume_chunk_ids to continue.",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "included_chunk_ids": {
            "type": "array",
            "description": "Chunk IDs that were included in this summary pass.",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}